--drop

--product
drop table if exists ref_product_property;
drop table if exists ref_order_product;
drop table if exists product;
drop table if exists c_property;

--order
drop table if exists ref_order_status;
drop table if exists orders;
drop table if exists c_method_issue;
drop table if exists c_payment_method;
drop table if exists c_status;

--promocode
drop table if exists promocode;
drop table if exists c_promocode_type;

--user
drop table if exists ref_tg_user_adress;
drop table if exists adress;
drop table if exists tg_user;



--creation

--product
create table product(
	id int generated by default as identity,
	name varchar(255) not null,
	price int not null,
	discount varchar(100) default null,
	discount_time timestamp default null,
	current_amount int default 1,
	is_hidden bool default false,
	primary key(id),
	unique(name)
);

create table c_property(
	id int generated by default as identity,
	name varchar(255) not null,
	is_hidden bool default false,
	primary key(id),
	unique(name)
);

create table ref_product_property(
	--id int generated by default as identity,
	product_id int not null,
	property_id int not null,
	property_value varchar(255),
	--primary key(id),
	primary key(product_id,property_id),
	constraint fk_ref_product_property_product_id 
	foreign key(product_id) references product(id),
	constraint fk_ref_product_property_property_id 
	foreign key(property_id) references c_property(id),
	unique(product_id,property_id)
);


--promocode
create table c_promocode_type(
	id int generated by default as identity,
	name varchar(255) not null,
	is_hidden bool default false,
	primary key(id),
	unique(name)
);

create table promocode(
	id int generated by default as identity,
	code_name varchar(255) not null,
	description varchar(255),
	origin varchar(255),
	promocode_type_id int,
	expired_at timestamp,
	is_valid bool default false,
	primary key(id),
	constraint fk_promocode_promocode_type_id
	foreign key(promocode_type_id) references c_promocode_type(id)
);


--orders
create table adress(
	id int generated by default as identity,
	adress varchar(255) not null,
	is_hidden bool default false,
	primary key(id)
);

create table c_method_issue(
	id int generated by default as identity,
	name varchar(255) not null,
	is_hidden bool default false,
	primary key(id),
	unique(name)
);

create table c_payment_method(
	id int generated by default as identity,
	name varchar(255) not null,
	is_hidden bool default false,
	primary key(id),
	unique(name)
);

create table c_status(
	id int generated by default as identity,
	name varchar(255) not null,
	is_hidden bool default false,
	primary key(id),
	unique(name)
);

create table orders(
	id  int generated by default as identity,
	created_at timestamp default CURRENT_TIMESTAMP,
	adress_id int,
	status_id int,
	promocode_id int,
	payment_method_id int,
	delivery_time timestamp,
	method_issue_id int,
	primary key(id),
	constraint fk_orders_adress_id
	foreign key(adress_id) references adress(id),
	constraint fk_orders_status_id
	foreign key(status_id) references c_status(id),
	constraint fk_orders_promocode_id
	foreign key(promocode_id) references promocode(id),
	constraint fk_orders_payment_method_id
	foreign key(payment_method_id) references c_payment_method(id),
	constraint fk_orders_method_issue_id
	foreign key(method_issue_id) references c_method_issue(id)
);

create table ref_order_status(
	id int generated by default as identity,
	order_id int not null,
	status_id int not null,
	updated_at timestamp default CURRENT_TIMESTAMP,
	primary key(id),
	constraint fk_ref_order_status_order_id
	foreign key(order_id) references orders(id),
	constraint fk_ref_order_status_status_id
	foreign key(status_id) references c_status(id)
);

create table ref_order_product(
	id int generated by default as identity,
	order_id int not null,
	product_id int not null,
	product_amount int not null,
	indexed_price int not null,
	primary key(id),
	constraint fk_ref_order_product_order_id
	foreign key(order_id) references orders(id),
	constraint fk_ref_order_product_product_id
	foreign key(product_id) references product(id)
);


--user
create table tg_user(
	id int generated by default as identity,
	chat_id varchar(255) not null,
	username varchar(255),
	firstname varchar(255), 
	lastname varchar(255), 
	primary key(id),
	unique(chat_id)
);

create table ref_tg_user_adress(
	id int generated by default as identity,
	tg_user_id int not null,
	adress_id int not null,
	value varchar(255),
	primary key(id),
	constraint fk_ref_tg_user_adress_tg_user_id 
	foreign key(tg_user_id) references tg_user(id),
	constraint fk_ref_tg_user_adress_adress_id
	foreign key(adress_id) references adress(id)
);



